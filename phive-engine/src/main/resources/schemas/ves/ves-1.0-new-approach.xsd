<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2014-2023 Philip Helger (www.helger.com)
    philip[at]helger[dot]com

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           xmlns="urn:com:helger:phive:ves:v1.0-new" 
           targetNamespace="urn:com:helger:phive:ves:v1.0-new"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           version="1.0">

  <xs:annotation>
    <xs:documentation>
This XML Schema is used describe "Validation Execution Sets" as used by the phive-validation library.
    </xs:documentation>
  </xs:annotation>

  <xs:group name="CoordinateGroup">
    <xs:annotation>
      <xs:documentation>The complex type defines the layout and the constraints of a single pair of coordinates</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>The group ID is something like a company or project ID</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="artifactId" type="xs:string">
        <xs:annotation>
          <xs:documentation>The artifact specifies something relative to a group. It must be unique within a group.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="version" type="xs:string">
        <xs:annotation>
          <xs:documentation>The version number of an artifact within a group. This MUST follow the semantic versioning principle.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:group>

  <xs:complexType name="NamespaceType">
    <xs:attribute name="prefix" use="required" type="xs:string"/>
    <xs:attribute name="uri" use="required" type="xs:anyURI"/>
    <xs:attribute name="overwrite" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="NamespacesType">
    <xs:sequence>
      <xs:element name="namespace" type="NamespaceType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ResourceType">
    <xs:sequence>
      <xs:group ref="CoordinateGroup"/>
      <xs:element name="classifier" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CustomErrorType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="level" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="OutputType">
    <xs:sequence>
      <xs:element name="customError" type="CustomErrorType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="RequiresType">
    <xs:sequence>
      <xs:group ref="CoordinateGroup"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element name="namespaces" type="NamespacesType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="output" type="OutputType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="stopOnError" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="XsdType">
    <xs:sequence>
      <xs:element name="resource" type="ResourceType"/>
      <xs:element name="main" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="catalog" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="namespaces" type="NamespacesType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SchematronType">
    <xs:sequence>
      <xs:element name="resource" type="ResourceType"/>
      <xs:element name="engine" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="InputType">
    <xs:sequence>
      <xs:element name="option" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="name" type="xs:string"/>
          <xs:attribute name="value" type="xs:string"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="EdifactType">
    <xs:sequence>
      <xs:element name="directory" type="xs:string"/>
      <xs:element name="message" type="xs:string"/>
      <xs:element name="input" type="InputType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="VesType">
    <xs:sequence>
      <xs:group ref="CoordinateGroup">
        <xs:annotation>
          <xs:documentation>The structured VESID of the VES</xs:documentation>
        </xs:annotation>
      </xs:group>
      <xs:element name="type" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Defines the type of validation. ATM: xsd, schematron, edifact</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>The display name of this VES.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="released" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="validFrom" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
      <xs:element name="requires" type="RequiresType" minOccurs="0" maxOccurs="1"/>
      <xs:choice>
        <xs:element name="xsd" type="XsdType"/>
        <xs:element name="schematron" type="SchematronType"/>
        <xs:element name="edifact" type="EdifactType"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="ves" type="VesType">
    <xs:annotation>
      <xs:documentation>The root element of the Validation Execution Set definition</xs:documentation>
    </xs:annotation>
  </xs:element>
</xs:schema>
